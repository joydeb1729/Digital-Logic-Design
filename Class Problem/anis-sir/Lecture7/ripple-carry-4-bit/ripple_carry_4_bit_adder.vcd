$date
	Sat Jul 20 11:15:07 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module t_ripple_carry_4_bit_adder $end
$var wire 4 ! S [3:0] $end
$var wire 1 " C4 $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % C0 $end
$scope module RC4bA $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 1 % C0 $end
$var wire 4 ( Sum [3:0] $end
$var wire 1 " C4 $end
$var wire 1 ) C3 $end
$var wire 1 * C2 $end
$var wire 1 + C1 $end
$scope module FA0 $end
$var wire 1 + C $end
$var wire 1 , x $end
$var wire 1 - y $end
$var wire 1 % z $end
$var wire 1 . S1 $end
$var wire 1 / S $end
$var wire 1 0 C2 $end
$var wire 1 1 C1 $end
$scope module HA1 $end
$var wire 1 1 C $end
$var wire 1 . S $end
$var wire 1 , x $end
$var wire 1 - y $end
$upscope $end
$scope module HA2 $end
$var wire 1 0 C $end
$var wire 1 / S $end
$var wire 1 . x $end
$var wire 1 % y $end
$upscope $end
$upscope $end
$scope module FA1 $end
$var wire 1 * C $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$var wire 1 + z $end
$var wire 1 4 S1 $end
$var wire 1 5 S $end
$var wire 1 6 C2 $end
$var wire 1 7 C1 $end
$scope module HA1 $end
$var wire 1 7 C $end
$var wire 1 4 S $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$upscope $end
$scope module HA2 $end
$var wire 1 6 C $end
$var wire 1 5 S $end
$var wire 1 4 x $end
$var wire 1 + y $end
$upscope $end
$upscope $end
$scope module FA2 $end
$var wire 1 ) C $end
$var wire 1 8 x $end
$var wire 1 9 y $end
$var wire 1 * z $end
$var wire 1 : S1 $end
$var wire 1 ; S $end
$var wire 1 < C2 $end
$var wire 1 = C1 $end
$scope module HA1 $end
$var wire 1 = C $end
$var wire 1 : S $end
$var wire 1 8 x $end
$var wire 1 9 y $end
$upscope $end
$scope module HA2 $end
$var wire 1 < C $end
$var wire 1 ; S $end
$var wire 1 : x $end
$var wire 1 * y $end
$upscope $end
$upscope $end
$scope module FA3 $end
$var wire 1 " C $end
$var wire 1 > x $end
$var wire 1 ? y $end
$var wire 1 ) z $end
$var wire 1 @ S1 $end
$var wire 1 A S $end
$var wire 1 B C2 $end
$var wire 1 C C1 $end
$scope module HA1 $end
$var wire 1 C C $end
$var wire 1 @ S $end
$var wire 1 > x $end
$var wire 1 ? y $end
$upscope $end
$scope module HA2 $end
$var wire 1 B C $end
$var wire 1 A S $end
$var wire 1 @ x $end
$var wire 1 ) y $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
0C
0B
1A
0@
0?
0>
0=
1<
0;
1:
19
08
07
16
05
14
13
02
11
00
0/
0.
1-
1,
1+
1*
1)
b1000 (
b111 '
b1 &
0%
b111 $
b1 #
0"
b1000 !
$end
#250
