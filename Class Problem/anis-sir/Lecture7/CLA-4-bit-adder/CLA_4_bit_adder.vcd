$date
	Sat Jul 20 10:16:55 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module t_CLA_4_bit_adder $end
$var wire 4 ! P [3:0] $end
$var wire 4 " G [3:0] $end
$var reg 4 # A [3:0] $end
$var reg 4 $ B [3:0] $end
$var reg 1 % C0 $end
$scope module PG $end
$var wire 4 & A [3:0] $end
$var wire 4 ' B [3:0] $end
$var wire 4 ( P [3:0] $end
$var wire 4 ) G [3:0] $end
$scope module HA1 $end
$var wire 1 * C $end
$var wire 1 + S $end
$var wire 1 , x $end
$var wire 1 - y $end
$upscope $end
$scope module HA2 $end
$var wire 1 . C $end
$var wire 1 / S $end
$var wire 1 0 x $end
$var wire 1 1 y $end
$upscope $end
$scope module HA3 $end
$var wire 1 2 C $end
$var wire 1 3 S $end
$var wire 1 4 x $end
$var wire 1 5 y $end
$upscope $end
$scope module HA4 $end
$var wire 1 6 C $end
$var wire 1 7 S $end
$var wire 1 8 x $end
$var wire 1 9 y $end
$upscope $end
$upscope $end
$scope begin monitor $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
09
08
07
06
15
04
13
02
11
00
1/
0.
1-
1,
0+
1*
b1 )
b110 (
b111 '
b1 &
0%
b111 $
b1 #
b1 "
b110 !
$end
#250
